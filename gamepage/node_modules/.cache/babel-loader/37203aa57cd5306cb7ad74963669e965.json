{"ast":null,"code":"var _jsxFileName = \"/Users/martinconlon/Desktop/web/gameAssignment2/gamepage/src/components/quizSearcher/ChooseQuiz.js\";\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Subjects from './Subjects';\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Divider } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChooseQuiz extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quizs: null,\n      quizId: null\n    };\n\n    this.componentDidMount = () => {\n      const subject = window.localStorage.getItem('subject');\n      console.log('subject');\n      console.log(subject);\n      axios.get('http://0.0.0.0:85/getQuizs', {\n        params: {\n          subject: subject\n        }\n      }).then(res => {\n        console.log(res.data);\n        this.setState({\n          quizs: res.data\n        });\n      });\n    };\n\n    this.chooseQuiz = QuizId => {\n      console.log(QuizId);\n      this.props.history.push(\"/ChooseQuiz\");\n      this.setState({\n        quizId: QuizId\n      });\n    };\n\n    this.Quizs = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: \"hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          component: \"h2\",\n          children: [\"Choose \", window.localStorage.getItem(subject), \" Quiz\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), this.state.quizs != null ? this.state.quizs.map(quiz => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: () => this.chooseQuiz(quiz.id),\n            button: true,\n            children: quiz.title\n          }, quiz.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(ChooseQuiz);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/martinconlon/Desktop/web/gameAssignment2/gamepage/src/components/quizSearcher/ChooseQuiz.js"],"names":["Grid","List","ListItem","ListItemText","Typography","React","Subjects","withRouter","axios","Divider","ChooseQuiz","Component","state","quizs","quizId","componentDidMount","subject","window","localStorage","getItem","console","log","get","params","then","res","data","setState","chooseQuiz","QuizId","props","history","push","Quizs","render","map","quiz","id","title"],"mappings":"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","sourcesContent":["import Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Subjects from './Subjects'\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios'\nimport { Divider } from '@material-ui/core';\nclass ChooseQuiz extends React.Component {\n    state={\n        quizs:null,\n        quizId:null\n    }\n    componentDidMount=()=>{\n        const subject = window.localStorage.getItem('subject')\n        console.log('subject')\n\n        console.log(subject)\n        axios.get('http://0.0.0.0:85/getQuizs', {\n            params: {\n              subject:subject\n            }\n          }).then((res)=>{\n              console.log(res.data)\n              this.setState({quizs:res.data})\n          });\n    }\n    chooseQuiz=(QuizId)=>{\n        console.log(QuizId)\n        this.props.history.push(\"/ChooseQuiz\");\n\n        this.setState({quizId:QuizId})\n    }\n    Quizs=()=>{\n        return (\n            <div>\n                <Typography>hello</Typography>\n                        <List >\n\n            \n                    </List >\n\n            </div>\n        )\n    }\n    render() {\n      return (\n        <Grid container spacing={3}>\n        <Grid item xs={2}>\n        </Grid>\n        <Grid item xs={8}>\n        <Typography variant=\"h1\" component=\"h2\">Choose {window.localStorage.getItem(subject)} Quiz</Typography>\n        { this.state.quizs!=null?this.state.quizs.map((quiz)=>{\n               return (\n                <ListItem\n                   key={quiz.id}\n              onClick={() => this.chooseQuiz(quiz.id)}\n\n              button\n              >{quiz.title}\n                </ListItem>)\n            }):<div></div>}\n        </Grid>\n\n      <Grid item xs={2}>\n        </Grid>\n\n      </Grid>\n\n      );\n    }\n  }\n  export default withRouter(ChooseQuiz)"]},"metadata":{},"sourceType":"module"}